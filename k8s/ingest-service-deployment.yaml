apiVersion: apps/v1
kind: Deployment
metadata:
  name: cas-ingest-service
  namespace: cas-dms
  labels:
    app: cas-ingest-service
    version: v1.0.0
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: cas-ingest-service
  template:
    metadata:
      labels:
        app: cas-ingest-service
        version: v1.0.0
    spec:
      containers:
      - name: ingest-service
        image: cas-ingest-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: MINIO_ENDPOINT
          value: "cas-minio:9000"
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: cas-secrets
              key: minio-access-key
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: cas-secrets
              key: minio-secret-key
        - name: RABBITMQ_URL
          value: "amqp://cas-user:$(RABBITMQ_PASSWORD)@cas-rabbitmq:5672/"
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cas-secrets
              key: rabbitmq-password
        - name: ELASTICSEARCH_URL
          value: "http://cas-elasticsearch:9200"
        - name: POSTGRES_URL
          value: "postgresql://cas-user:$(POSTGRES_PASSWORD)@cas-postgres:5432/cas_dms"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cas-secrets
              key: postgres-password
        - name: LOG_LEVEL
          value: "INFO"
        - name: ENVIRONMENT
          value: "production"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: source-data
          mountPath: /data/source
          readOnly: true
        - name: sorted-data
          mountPath: /data/sorted
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: config-volume
        configMap:
          name: cas-config
      - name: source-data
        persistentVolumeClaim:
          claimName: cas-source-data-pvc
      - name: sorted-data
        persistentVolumeClaim:
          claimName: cas-sorted-data-pvc
      - name: logs
        emptyDir: {}
      imagePullSecrets:
      - name: cas-registry-secret
      nodeSelector:
        node-role: worker
      tolerations:
      - key: "dedicated"
        operator: "Equal"
        value: "cas-dms"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - cas-ingest-service
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: cas-ingest-service
  namespace: cas-dms
  labels:
    app: cas-ingest-service
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: cas-ingest-service
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cas-ingest-service-hpa
  namespace: cas-dms
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cas-ingest-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60 