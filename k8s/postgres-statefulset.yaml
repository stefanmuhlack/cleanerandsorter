apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cas-postgres
  namespace: cas-dms
spec:
  serviceName: cas-postgres
  replicas: 1
  selector:
    matchLabels:
      app: cas-postgres
  template:
    metadata:
      labels:
        app: cas-postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "cas_dms"
        - name: POSTGRES_USER
          value: "cas_user"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cas-dms-secrets
              key: postgres-password
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - cas_user
            - -d
            - cas_dms
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - cas_user
            - -d
            - cas_dms
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: init-scripts
        configMap:
          name: cas-dms-config
          items:
          - key: init.sql
            path: init.sql
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: cas-postgres
  namespace: cas-dms
spec:
  selector:
    app: cas-postgres
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP 